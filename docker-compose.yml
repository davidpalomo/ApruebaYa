services:
  # Servicio de base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: apruebaYa-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: apruebaYa
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - apruebaYa-network

  # Servicio de backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: apruebaYa-backend
    restart: always
    depends_on:
      - postgres
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/apruebaYa
      PORT: 3001
      GEMINI_API_KEY: AIzaSyAI-6CP00lorMekdzC_T9B8hO8wU389uIo
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
      - ./database:/app/database
      - ./.env:/app/.env
    networks:
      - apruebaYa-network

  # Servicio de frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: apruebaYa-frontend
    restart: always
    depends_on:
      - backend
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:3001/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    networks:
      - apruebaYa-network

networks:
  apruebaYa-network:
    driver: bridge

volumes:
  postgres_data:
  backend_node_modules:
  frontend_node_modules:
